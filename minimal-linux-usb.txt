minimal-linux-usb

1. parent system pre-build setup (fyi)

64-bit debian linux on /dev/sda1 (newest release)
bios boot order: usb then hard drive
a usb drive (ex. an 8G thumb drive for /dev/sdb)
previously built minimal-linux-new (ex. on /dev/sda7)
internet connection

2. boot the parent system without the usb drive inserted

3. within the parent system (debian) open a terminal & become superuser

~# su -

4. install the following packages on the parent system (if not already present)

~# apt install extlinux mtools syslinux syslinux-common

5. insert a usb drive and identify it (rec. be certain it's correct)

~# lsblk 
	(ex. sdb
	     |__sdb1)

6. unmount everything on the target usb & shred it (ex. /dev/sdb)

~# umount /dev/sdb1
~# shred -v -n 1 /dev/sdb

7. create a new, single partition on /dev/sdb using fdisk

~# fdisk /dev/sdb (rec. use mostly the default selections)
 
 	Command (m for help): n
 	Partition type (default p): p
 	Partition number (default 1): 1
 	First sector (default 2048): Enter
 	Last sector (default 16779263): Enter
 	Command (m for help): a
 	Command (m for help): w

8. add mbr.bin from extlinux to /dev/sdb

~# cat /usr/lib/EXTLINUX/mbr.bin > /dev/sdb

9. create & mount a filesystem on the usb build partition

~# mkdir /mnt/sdb1
~# mkfs.ext4 /dev/sdb1
~# mount -t ext4 /dev/sdb1 /mnt/sdb1

10. identify the PARTUUID of the new partition (the UUID can also be used)

~# blkid (exanple output shown)

	ex. /dev/sdb1: UUID="########-####-####-####-############" 
	BLOCK_SIZE="4096" TYPE="ext4" PARTUUID="1234abcd-12"

11. copy all of mimimal-linux-new from /mnt/sda7 to /mnt/sdb1

~# mount -t ext4 /dev/sda7 /mnt/sda7
~# cp -p -r /mnt/sda7/* /mnt/sdb1

12. install extlinux on /dev/sdb1

~# mkdir /mnt/sdb1/boot/syslinux
~# extlinux -i /mnt/sdb1/boot/syslinux

13. create syslinux.cfg (using your PARTUUID)

~# cat > /mnt/sdb1/boot/syslinux/syslinux.cfg << 'done'
DEFAULT linux
LABEL linux
 KERNEL /vmlinuz
 APPEND initrd=/initramfs root=PARTUUID=1234abcd-12
done

14. create initramfs (this is from the parent kernel)

~# cd /mnt/sdb1
~# mkinitramfs -o /mnt/sdb1/boot/initramfs-$(uname)
~# ln -f -s boot/initramfs* initramfs

15. create a swapfile

~# mkdir /mnt/sdb1/var/tmp
~# fallocate -l 1G /mnt/sdb1/var/tmp/swapfile
~# chmod 600 /mnt/sdb1/var/tmp/swapfile
~# mkswap /mnt/sdb1/var/tmp/swapfile

16. modify /mnt/sdb1/etc/fstab (using your PARTUUID)

~# cat > /mnt/sdb1/etc/fstab << 'done'
proc /proc proc defaults 0 0
sysfs /sys sysfs defaults 0 0
PARTUUID=1234abcd-12 / ext4 defaults 0 1
/var/tmp/swapfile none swap sw 0 0
done

17. modify /mnt/sdb1/etc/os-release

~# cat > /mnt/sdb1/etc/os-release << 'done'
NAME="minimal-linux-usb"
VERSION="v1"
HOME_URL="https://github.com/skewish"
done

18. modify /mnt/sdb1/etc/init.d/rcS (using your PARTUUID)

~# cat > /mnt/sdb1/etc/init.d/rcS << 'done'
#!/bin/sh
mount -o remount,rw PARTUUID=1234abcd-12 /
rm -f -r /tmp;mkdir -m 1777 /tmp
rm /.ash_history
mount -a
swapon -a
done

19. reboot with the usb drive inserted (it should start)
